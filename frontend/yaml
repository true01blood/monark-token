Dezvoltator
Ecosistemul Monark este parte a procesului de tokenizare a activelor reale de tip imobiliar.

yaml
Copy
Edit

---

### ✅ `frontend/` – Structură minimă dashboard UI (React)

frontend/
├── public/
│ └── index.html
├── src/
│ ├── abis/
│ │ └── MonarkToken.json
│ ├── App.js
│ ├── index.js
│ └── config.js
├── package.json
└── .env

arduino
Copy
Edit

#### `src/config.js`

```js
export const TOKEN_ADDRESS = "0x50fC939a81bA2a1ec0740a72d3D3f28632676510"; // adresa reală după deploy
src/App.js
jsx
Copy
Edit
import { ethers } from "ethers";
import { useEffect, useState } from "react";
import MonarkToken from "./abis/MonarkToken.json";
import { TOKEN_ADDRESS } from "./config";

function App() {
  const [account, setAccount] = useState("");
  const [balance, setBalance] = useState("");

  const connect = async () => {
    const [addr] = await window.ethereum.request({ method: "eth_requestAccounts" });
    setAccount(addr);
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const token = new ethers.Contract(TOKEN_ADDRESS, MonarkToken.abi, provider);
    const raw = await token.balanceOf(addr);
    setBalance(ethers.utils.formatUnits(raw, 18));
  };

  return (
    <div>
      <h2>Monark Token Dashboard</h2>
      <button onClick={connect}>Conectare Wallet</button>
      <p>Cont: {account}</p>
      <p>MONK balance: {balance}</p>
    </div>
  );
}

export default App;
